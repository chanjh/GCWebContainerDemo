{"version":3,"file":"jsbridge.js","mappings":"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","sources":["webpack://@pandola/bridge/./src/bridge.ts","webpack://@pandola/bridge/./src/callback.ts","webpack://@pandola/bridge/./src/callback_wrapper.ts","webpack://@pandola/bridge/./src/config.default.ts","webpack://@pandola/bridge/./src/event_center.ts","webpack://@pandola/bridge/./src/global.ts","webpack://@pandola/bridge/./src/invoker.ts","webpack://@pandola/bridge/./src/launcher.ts","webpack://@pandola/bridge/./src/lock.ts","webpack://@pandola/bridge/./src/register.ts","webpack://@pandola/bridge/./src/service_loader.ts","webpack://@pandola/bridge/./src/wrap_service.ts","webpack://@pandola/bridge/./src/services/ sync \\.js$","webpack://@pandola/bridge/webpack/bootstrap","webpack://@pandola/bridge/webpack/runtime/hasOwnProperty shorthand","webpack://@pandola/bridge/./src/index.ts"],"sourcesContent":["\nexport default class Bridge {\n  constructor() { }\n}\n","import invoker from \"./invoker\";\nimport Lock from \"./lock\";\nexport default function callback(bridge: string) {\n  let callbackFunc = function () {\n    const max = 9999;\n    const min = 0;\n    const random = parseInt(`${Math.random() * (max - min + 1) + min}`, 10);\n    const { global } = window.gc._config;\n    return `${global}_${bridge.replaceAll(\".\", \"\")}_callback_func_${random}`;\n  }\n  function _initCallback(callback: string) {\n    (window as any)[callback] = function (...arg: any[]) {\n      const { global } = window.gc._config;\n      // 1. unlock\n      // 2. send msg to wrapFunction on service\n      lock.unlock(arg[0])\n      // 3. remove callback\n      delete (window as any)[callback];\n    }\n  }\n  let lock = new Lock();\n  return async function (...arg: any[]) {\n    const callback = callbackFunc();\n    _initCallback(callback);\n    const params = JSON.parse(JSON.stringify(arg));\n    // callback, need to be a function name but not a obj in window\n    lock = new Lock();\n    lock.lock();\n    await invoker(`${bridge}`, params, callback);\n    return await lock.status\n  }\n}","import Lock from \"./lock\";\n\nexport default async function wrapCallback(uid: string, fn: Function, callback?: Function) {\n  let callbackFunc = function () {\n    const max = 9999;\n    const min = 0;\n    const random = parseInt(`${Math.random() * (max - min + 1) + min}`, 10);\n    const { global } = window.gc._config;\n    return `${global}_${uid.replaceAll(\".\", \"\")}_callback_func_${random}`;\n  }\n  function _initCallback(callbackName: string) {\n    (window as any)[callbackName] = function (...arg: any[]) {\n      const { global } = window.gc._config;\n      // 1. unlock\n      // 2. send msg to wrapFunction on service\n      if (callback) {\n        callback(arg[0])\n      }\n      lock.unlock(arg[0])\n      // 3. remove callback\n      console.log('delete callback:', callbackName);\n      delete (window as any)[callbackName];\n    }\n  }\n  let lock = new Lock();\n  const callbackName = callbackFunc();\n  console.log(callbackName, uid);\n  _initCallback(callbackName);\n  // callback, need to be a function name but not a obj in window\n  lock.lock();\n  fn(callbackName);\n  return await lock.status\n}\n","\nconst config = {\n  bridgeName: 'invoke',\n  global: 'gc',\n  services: {\n    util: {\n      contextMenu: ['clear'],\n      test: ['testMethod']\n    },\n    runtime: {\n      system: {\n        lifecyle: {\n          app: ['willopen']\n        }\n      },\n      test: ['testMethod']\n    }\n  }\n};\n\nexport default config;","import register from './register';\nexport default class EventCenter {\n  listeners: { [key: string]: Function[] } = {};\n\n  subscribe(event: string, fn: Function) {\n    const { listeners } = this;\n    let listenersForEvent = listeners[event]\n    if (!listenersForEvent) {\n      listenersForEvent = []\n    }\n    listenersForEvent.push(fn);\n    listeners[event] = listenersForEvent;\n  }\n\n  publish(event: string, ...params: any[]) {\n    const { listeners } = this;\n    const listenersForEvent = listeners[event];\n    if (listenersForEvent) {\n      for (const listener of listenersForEvent) {\n        listener(...params);\n      }\n    }\n  }\n}\nregister('eventCenter', new EventCenter());","// instance injecting on `window`\nexport default class Global {\n  constructor() { }\n  _config: {bridgeName: string, global: string, services: {}};\n  bridge: any;\n}\n","import Lock from \"./lock\";\nimport wrapCallback from \"./callback_wrapper\";\n\nexport default async function invoker(action: string | undefined, params: {}, callback: string) {\n  let arg = params\n  if (!params) {\n    arg = {}\n  }\n  var message = {\n    action: action,\n    params: arg,\n    callback: callback,\n  };\n  const { bridgeName } = window.gc._config;\n  await window.webkit.messageHandlers[bridgeName].postMessage(message)\n}\n\nexport async function jsbridge(action: string, params?: {}, callback?: Function) {\n  return await wrapCallback(action,\n    (callbackName: string) => invoker(action, params, callbackName),\n    callback\n  );\n  // let callbackFunc = function () {\n  //   const max = 9999;\n  //   const min = 0;\n  //   const random = parseInt(`${Math.random() * (max - min + 1) + min}`, 10);\n  //   const { global } = window.gc._config;\n  //   return `${global}_${action.replaceAll(\".\", \"\")}_callback_func_${random}`;\n  // }\n  // function _initCallback(callbackName: string) {\n  //   (window as any)[callbackName] = async function (...arg: any[]) {\n  //     const { global } = window.gc._config;\n  //     // 1. unlock\n  //     // 2. send msg to wrapFunction on service\n  //     if (callback) {\n  //       await callback(arg[0])\n  //     }\n  //     lock.unlock(arg[0])\n  //     // 3. remove callback\n  //     console.log('delete callback:', callbackName);\n  //     delete (window as any)[callbackName];\n  //   }\n  // }\n  // let lock = new Lock();\n  // const callbackName = callbackFunc();\n  // console.log(callbackName);\n  // _initCallback(callbackName);\n  // // callback, need to be a function name but not a obj in window\n  // lock = new Lock();\n  // lock.lock();\n  // await invoker(action, params, callbackName);\n  // return await lock.status\n}","import Global from './global'\nimport loadAllServices from './service_loader';\nimport Bridge from './bridge'\nimport * as defaultConfig from \"./config.default\";\nimport { jsbridge } from './invoker';\n\nexport default function launcher(config?: any) {\n  let finalConfig = config;\n  if (!config) {\n    finalConfig = defaultConfig.default;\n  }\n  const { global } = finalConfig;\n  // 0. register gc on window\n  (window as any)[`${global}`] = new Global();\n  (window as any)[`${global}`].bridge = new Bridge();\n  // (window as any)[`${global}`].bridge.jsbridge = jsbridge;\n  window.gc._config = finalConfig;\n  // 1. add event center\n  require('./event_center');\n  // 1. load all services\n  // loadAllServices();\n}\n","\n// export default function Lock() {\n//   this.callback = null\n//   this.status = new Promise((resolve) => { resolve(true) })\n//   this.lock = function () {\n//     this.status = new Promise((resolve) => { this.callback = resolve })\n//   }\n//   this.unlock = function (result: any) { this.callback(result) }\n// }\n\nexport default class Lock {\n  status: Promise<any>;\n  callback?: Function;\n  constructor() {\n    this.status = new Promise<any>((resolve) => { resolve(true) })\n  }\n\n  lock() {\n    this.status = new Promise<any>((resolve) => { this.callback = resolve })\n  }\n\n  unlock(result: any) {\n    this.callback(result)\n  }\n}","export default function register(name: string, fn: any) {\n  const { global } = window.gc._config;\n  const host = (window as any)[global].bridge;\n  host[name] = fn;\n}\n\n","import ServiceWrapper, { wrapFunction } from './wrap_service';\n\nexport default function loadAllServices() {\n  const { services } = window.gc._config;\n  const { global } = window.gc._config;\n  const host = (window as any)[global].bridge;\n  parseService(services, '', host);\n  loadDefaultServices();\n\n  function parseService(service: any, namespace: string, host: any) {\n    if (Array.isArray(service)) {\n      return service\n    }\n    Object.keys(service).forEach(name => {\n      const newNamespace = namespace.length == 0 ? name : `${namespace}.${name}`;\n      host[name] = Object()\n      const methods = parseService(service[name], newNamespace, host[name])\n      if (methods) {\n        // wrap class, hook methods in class to `webkit.messageHandlers.invoke.postMessage()`\n        // window.gc.bridge.contextMenu.set equal to =>\n        // window.webkit.messageHandlers.invoke.postMessage(data)\n        const wrapper = new ServiceWrapper({\n          name,\n          bridge: newNamespace,\n          methods: methods,\n        })\n        host[name] = wrapper\n      }\n    })\n  }\n}\n\nfunction bridgeName(service: string) {\n  return service[0].toLowerCase() + service.substring(1).split('Service')[0];\n}\n\nfunction loadDefaultServices() {\n  var req = require.context(\"./services\", true, /\\.js$/);\n  req.keys().forEach(function (key: string) {\n    const js = req(key);\n    injectService(js);\n  });\n}\n\nexport function injectService(service: any) {\n  if (service.__esModule) {\n    const namespace = service.default.namespace;\n    const { global } = window.gc._config;\n    let point = (window as any)[global].bridge;\n    (namespace as string).split('.').forEach(name => {\n      if (!point[name]) {\n        point[name] = new Object()\n      }\n      point = point[name]\n    })\n    // point = new (service.default()) // todo: 深拷贝\n    const methods = Object.getOwnPropertyNames(service.default.prototype);\n    methods.forEach(m => {\n      if (m !== 'constructor' && !m.startsWith('native_')) {\n        // return point[m](arg)\n        point[m] = function (...arg: any[]) {\n          // todo: service cache\n          const serviceIns = (new service.default())\n          return serviceIns[m](arg)\n        }\n      }\n    })\n  }\n}","import invoker from \"./invoker\";\nimport Lock from \"./lock\";\n\n// wrapFunction(\"runtime\", \"chrome.runtime\", \"getURL\")\nexport function wrapFunction(name: string, bridge: string, method: string) {\n  let callbackFunc = function () {\n    const max = 9999;\n    const min = 0;\n    const random = parseInt(`${Math.random() * (max - min + 1) + min}`, 10);\n    const { global } = window.gc._config;\n    return `${global}_${name}_callback_func_${random}`;\n  }\n  function _initCallback(callback: string) {\n    (window as any)[callback] = function (...arg: any[]) {\n      const { global } = window.gc._config;\n      // 1. unlock\n      // 2. send msg to wrapFunction on service\n      lock.unlock(arg[0])\n      // 3. remove callback\n      delete (window as any)[callback];\n    }\n  }\n  let lock = new Lock();\n  return async function (...arg: any[]) {\n    const callback = callbackFunc();\n    _initCallback(callback);\n    const params = JSON.parse(JSON.stringify(arg));\n    // callback, need to be a function name but not a obj in window\n    lock = new Lock();\n    lock.lock();\n    await invoker(`${bridge}.${method}`, params, callback);\n    return await lock.status\n  }\n}\n\nexport default class ServiceWrapper {\n  serviceInfo: {methods: string[], name: string, bridge: string}\n  constructor(serviceInfo: {methods: string[], name: string, bridge: string}) {\n    this.serviceInfo = serviceInfo;\n    this._initMethods();\n  }\n\n  _initMethods() {\n    const constructorFunc = \"constructor\";\n    const { methods } = this.serviceInfo;\n    methods.forEach(m => {\n      if (m !== constructorFunc) {\n        const { name, bridge } = this.serviceInfo;\n        (this as any)[m] = wrapFunction(name, bridge, m)\n      }\n    });\n  }\n}\n","var map = {\n\t\"./chrome.js\": 338,\n\t\"./runtime/installed.js\": 613,\n\t\"./runtime/runtime.js\": 991,\n\t\"./runtime/system.js\": 20,\n\t\"./runtime/test.js\": 935\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 294;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// import launcher from '../src/launcher'\n// launcher();\n\n// window.gc.bridge.util.contextMenu.clear().then(function (result) {\n//   console.log(`res: ${JSON.stringify(result)}`);\n// });\n\nrequire('./launcher');\nrequire('./service_loader');\nrequire('./register');\nrequire('./callback');\nrequire('./global');"],"names":["callback","bridge","callbackFunc","random","parseInt","Math","global","window","gc","_config","replaceAll","_initCallback","lock","unlock","arg","params","JSON","parse","stringify","status","wrapCallback","uid","fn","callbackName","console","log","bridgeName","services","util","contextMenu","test","runtime","system","lifecyle","app","listeners","subscribe","event","this","listenersForEvent","push","publish","listener","EventCenter","invoker","action","message","webkit","messageHandlers","postMessage","jsbridge","launcher","config","finalConfig","defaultConfig","Promise","resolve","result","register","name","injectService","service","__esModule","namespace","split","forEach","Object","getOwnPropertyNames","prototype","m","startsWith","serviceIns","loadAllServices","parseService","host","Array","isArray","keys","newNamespace","length","methods","wrapper","loadDefaultServices","req","key","wrapFunction","method","serviceInfo","_initMethods","map","webpackContext","id","webpackContextResolve","__webpack_require__","o","e","Error","code","webpackContextKeys","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","call","obj","prop","hasOwnProperty"],"sourceRoot":""}